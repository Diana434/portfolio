#!pip install spacy    
import spacy
import gensim
from sympy.physics.units import current
from songbase import WorkSQL
import urllib.request
urllib.request.urlretrieve('https://vectors.nlpl.eu/repository/20/180.zip', 'ruscorpora_upos_cbow_300_20_2019.zip')
import zipfile
import re

#–∑–∞–≥—Ä—É–∂–∞–µ–º –≤–µ–∫—Ç–æ—Ä–Ω—É—é –º–æ–¥–µ–ª—å
src = 'ruscorpora_upos_cbow_300_20_2019.zip'
with zipfile.ZipFile(src, 'r') as zip_ref:
    zip_ref.extractall('.')
m = 'model.bin'

#0 - –∂–¥–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Å–Ω–∏
#1 - –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω
#2 - –∂–¥–µ–º –≤–≤–æ–¥–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
#3 - –∂–¥–µ–º –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Å–Ω–∏
#4 - –∂–¥–µ–º –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞

#–∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
class Chat_profile:

    #—Å—Ç–∞—Ç—É—Å
    Status = 0
    #—Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–µ—Å–µ–Ω –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
    songlist = []
    #—Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ
    current_songs = '–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫'
    #–∏–º—è –Ω–æ–≤–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    newsinger = ''
    #–∏–º—è –Ω–æ–≤–æ–π –ø–µ—Å–Ω–∏
    newsong = ''
    #—Ç–µ–∫—Å—Ç –Ω–æ–≤–æ–π –ø–µ—Å–Ω–∏
    newtxt = ''


#–∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–∞–±–æ—Ç—É —Å —á–∞—Ç–∞–º–∏ —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
class Chat:
    #—Å–ª–æ–≤–∞—Ä—å —á–∞—Ç–æ–≤, –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ —Ç—É—Ç –±—É–¥–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∏ –∞–π–¥–∏
    chat_list = {}

    #–ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —á–∞—Ç–∞ –ø–æ –∞–π–¥–∏
    def get_prof(self, id):
        try:
            prof = self.chat_list[id]
        except KeyError:
            prof = Chat_profile()
            pass
        return prof

    #—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏ –æ–±–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏
    def setstatus(self, id, status):

        #–ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å, –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ø—Ä–æ—Ñ–∏–ª–µ
        prof = self.get_prof(id)
        prof.Status = status
        self.chat_list[id] = prof

        #–æ–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        start_button = types.KeyboardButton("–ü–æ–º–æ—â—å")
        action_button = types.KeyboardButton("–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω")
        add_button = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –ø–µ—Å–Ω—é")
        cancel_button = types.KeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å")
        if status == 0:
            markup.add(start_button, add_button)
        elif  status == 1:
            markup.add(start_button, action_button, add_button)
        elif status == 2 or status == 3 or status == 4:
            markup.add(cancel_button)
        return markup

    #–ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å
    def getstatus(self, id):
        prof = self.get_prof(id)
        return prof.Status

    #—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ
    def setsonglist(self, id, songlist, current_songs):
        prof = self.get_prof(id)
        prof.songlist = songlist
        prof.current_songs = current_songs
        self.chat_list[id] = prof

    #—Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    def setnewsinger(self, id, newsinger):
        prof = self.get_prof(id)
        prof.newsinger = newsinger
        self.chat_list[id] = prof

    #—Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–æ–¥ –Ω–æ–≤–æ–π –ø–µ—Å–Ω–∏
    def setnewsong(self, id, newsong):
        prof = self.get_prof(id)
        prof.newsong = newsong
        self.chat_list[id] = prof

    #–ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
    def getprof(self, id):
        prof = self.get_prof(id)
        return prof

    #–ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ
    def getcurrentsongs(self, id):
        prof = self.get_prof(id)
        return prof.current_songs

    #–ø–æ–ª—É—á–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –∏ –ø–µ—Å–µ–Ω
    def getsonglist(self, id):
        prof = self.get_prof(id)
        return prof.songlist


#–∑–∞–≥—Ä—É–∂–∞–µ–º –≤–µ–∫—Ç–æ—Ä–Ω—É—é –º–æ–¥–µ–ª—å
rus_model = gensim.models.KeyedVectors.load_word2vec_format(m, binary=True)
#–∑–∞–≥—Ä—É–∂–∞–µ–º —è–∑—ã–∫–æ–≤—É—é –º–æ–¥–µ–ª—å
nlp = spacy.load("ru_core_news_sm")
#—Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∫–ª–∞—Å—Å–∞ —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π
wsql = WorkSQL()
#—Å–æ–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—ã —Å —á–∞—Ç–æ–º
chat = Chat()

#–Ω–∞—Ö–æ–¥–∏–º –ø–æ—Ö–æ–∂–∏–µ —Å–ª–æ–≤–∞ –≤ –º–æ–¥–µ–ª–∏
def similarity (mood, deep):
    sim_mood = []
    for w in mood:
        l = [(w, 10)]
        doc = nlp(w)
        #—Ç–æ–∫–µ–Ω–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–≤–æ, —Ç.–∫. –Ω–∞–º –Ω—É–∂–Ω–æ —Å–ª–æ–≤–æ —Å —á–∞—Å—Ç—å—é —Ä–µ—á–∏
        for token in doc:
            w1 = token.lemma_ + '_' + token.pos_
            w1 = w1.replace("—ë", "–µ")
        if w1 in rus_model.index_to_key:
            for i in rus_model.most_similar(w1, topn=deep):
                #–¥–æ–±–∞–≤–ª—è–µ–º –ø—è—Ç—å —Å–ª–æ–≤ –≤—Ö–æ–¥—è—â–∏—Ö –≤ –ø—è—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≤ –≥–æ—Ç–æ–≤–æ–π –º–æ–¥–µ–ª–∏
                l.append((i[0][:i[0].find("_")], i[1]))
        sim_mood.append(l)

    return sim_mood

#–±–µ—Ä–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤, –Ω–∞—Ö–æ–¥–∏–º –ø–æ—Ö–æ–∂–∏–µ, –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –≤ –±–∞–∑–µ
def gettext(txt):
    #—Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤
    mood = txt.split(' ')
    #—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª—É–±–∏–Ω—É –ø–æ—Ö–æ–∂–∏—Ö 10
    deep = 10 #–º–± –ø—è—Ç—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å
    #mood_n = []
    #for i in mood:
    #    mood_n.append(i)

    #–Ω–∞—Ö–æ–¥–∏–º –ø–æ—Ö–æ–∂–∏–µ
    siml = similarity(mood, deep)

    #–ø—Ä–µ–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Ö–æ–∂–∏—Ö –≤ —Ç–µ–∫—Å—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞
    resl = []
    for sl in siml: #–±–µ—Ä—ë–º –∫–∞–∂–¥—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞
        tempstr = '' 
        for s in sl: #–±–µ—Ä—ë–º –ø–æ –æ–¥–Ω–æ–º—É —Å–ª–æ–≤—É —Å—Ä–µ–¥–∏ –ø–æ—Ö–æ–∂–∏—Ö –¥–ª—è –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞
            tempstr += s[0] + ' ' #s[0] - –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–ª–æ–≤–æ, s[1] - –µ–≥–æ —á–∞—Å—Ç—å —Ä–µ—á–∏
        resl.append(tempstr) #—Å–ø–∏—Å–æ–∫ –∏–∑ –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –≥–¥–µ –ø—Ä–æ—Å—Ç–æ –¥–ª–∏–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ 

    #temps = wsql.songs(siml) # —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—ë—Ç —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω

    return resl, wsql.songs(siml)

# –ø–µ—Ä–µ–¥–∞—ë–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å –∫–æ–¥–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—É –±–æ—Ç–∞
import telebot # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º telebot
from telebot import types # –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤
from keyboa import Keyboa

import random # –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∞
# –ø–µ—Ä–µ–¥–∞—ë–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å –∫–æ–¥–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—É –±–æ—Ç–∞
token = ('7296256234:AAEYZBPWaf-e2vl-8UlFuP89_Y5EPyf6mNw')
bot = telebot.TeleBot(token)



#—Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–µ—Å–Ω–∏
@bot.message_handler(commands=['set'])
def send_buttons(message: types.Message):
    #–ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫
    bb = []
    #—Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    songlist = chat.getsonglist(message.chat.id)
    for i in range(len(songlist)):
        bb.append(str(i + 1))
    if len(bb) == 0:
        print('–°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –ø—É—Å—Ç–æ–π')
        return
    #—Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    kb = Keyboa(items=bb, copy_text_to_callback=True, items_in_row=4, alignment=False)
    #–≤—ã–≤–æ–¥–∏–º
    bot.send_message(
        chat_id=message.chat.id, reply_markup=kb(),
        text="–í—ã–±–µ—Ä–µ—Ç–µ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏")

#–ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –ø–æ –Ω–æ–º–µ—Ä—É
def show_song_text(chat, message, number1):
    #–ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –∏–∑  –ø—Ä–æ—Ñ–∏–ª—è
    songlist = chat.getsonglist(message.chat.id)
    number = int(number1) - 1

    #–ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å–ø–∏—Å–∫–∞
    if number < 0 or number >= len(songlist):
        bot.send_message(message.chat.id, text="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –ø–µ—Å–Ω–∏")
        return '', '', "–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏"
    if len(songlist) == 0:
        return '', '', "–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –ø—É—Å—Ç–æ–π"

    #–ø–æ–ª—É—á–∞–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∏ –ø–µ—Å–Ω—é
    singer = songlist[number][0]
    song = songlist[number][1]

    #–¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑—É –Ω–∞ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏
    txt = wsql.getsong(singer, song)
    #–µ—Å–ª–∏ –ø–µ—Å–Ω—è –Ω–∞–π–¥–µ–Ω–∞ - –≤—ã–≤–æ–¥–∏–º
    if message.text == '':
        bot.send_message(message.chat.id, '–ü–µ—Å–Ω—è –≤ —Å–ø–∏—Å–∫–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö')
    else:
        bot.send_message(message.chat.id, text='<b>' + singer + '\n' + song + '</b>' + '\n' + txt, parse_mode="HTML")

#–æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–µ—Å–Ω–∏
@bot.callback_query_handler(func=lambda call: call.data.isdigit())
def save_btn(call):
    message = call.message
    show_song_text(chat, message, int(call.data))


# —Ö–µ–Ω–¥–ª–µ—Ä –∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_message(message):
    markup = chat.setstatus(message.chat.id, 0)
    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}!üíò\n–≠—Ç–æ—Ç –±–æ—Ç - —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–≤–æ–µ–º—É –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é.\
    –°–æ –º–Ω–æ–π —Ç—ã –ø–æ–ª—É—á–∏—à—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–µ–π–ª–∏—Å—Ç, –∞ —Ç–∞–∫–∂–µ —Å–º–æ–∂–µ—à—å –¥–æ–±–∞–≤–ª—è—Ç—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤—ã–µ –ø–µ—Å–Ω–∏, —á—Ç–æ–±—ã —è –º–æ–≥ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è.\
    \n–ß–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤–≤–µ–¥–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤, –æ–ø–∏—Å—ã–≤–∞—é—â–∏—Ö —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∞ —è –Ω–∞–π–¥—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–µ—Å–Ω–∏!".format(message.from_user), reply_markup=markup)

#–≤–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤–≤–æ–¥–∞ –ø–µ—Å–Ω–∏
@bot.message_handler(commands=['add'])
def add_song(message):
    #—Å—Ç–∞–≤–∏–º —Å—Ç–∞—Ç—É—Å
    markup = chat.setstatus(message.chat.id, 2) #–¥–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫–∏, –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è - –æ—Ç–º–µ–Ω–∏—Ç—å
    #–≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫–∏
    bot.send_message(message.chat.id, text="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—É—é –ø–µ—Å–Ω—é –≤ –±–∞–∑—É", reply_markup=markup)
    bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", reply_markup=markup)

def mes_is_ok(message):
    print("luuuuu")
    if not message:
        return False
    message = str(message)
    return bool(re.fullmatch(r'^[a-zA-Z–∞-—è–ê-–Ø0-9 ]+$', message))

#–æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler(content_types=['text'])
def process_text(message):
    #–ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ñ–∏–ª—è
    status = chat.getstatus(message.chat.id)
    #–µ—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ —Å—Ç–∞—Ç—É—Å–æ–≤ - –≤–≤–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è - –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥
    if status == 2 or status == 3 or status == 4:
        #–µ—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω–∏—Ç—å - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–∏—Å–∫–∞ –ø–µ—Å–µ–Ω
        if message.text == '–û—Ç–º–µ–Ω–∏—Ç—å':
            markup = chat.setstatus(message.chat.id, 0)
            bot.send_message(message.chat.id, text='–í–≤–æ–¥ –ø–µ—Å–Ω–∏ –æ—Ç–º–µ–Ω—ë–Ω. –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Å–Ω—é, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /add\n–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω, —Ç–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤–≤–µ–¥–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤, –æ–ø–∏—Å—ã–≤–∞—é—â–∏—Ö —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', reply_markup=markup)
        #–µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω —Ç–µ–∫—Å—Ç
        else:
            #–µ—Å–ª–∏ –±—ã–ª —Å—Ç–∞—Ç—É—Å - –≤–≤–æ–¥ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
            if status == 2:
                #–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ –≤–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è
                chat.setstatus(message.chat.id, 3)
                #–∑–∞–ø–æ–º–∏–Ω–∞–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è,
                chat.setnewsinger(message.chat.id, message.text)
                bot.send_message(message.chat.id, text='–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏')
                # —Å—Ç–∞–≤–∏–º —Å—Ç–∞—Ç—É—Å –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è
                chat.setstatus(message.chat.id, 3)
            #—Å—Ç–∞—Ç—É—Å - –≤–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è
            if status == 3:
                #–∑–∞–ø–æ–º–∏–Ω–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
                chat.setnewsong(message.chat.id, message.text)
                # –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
                bot.send_message(message.chat.id, text='–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏')
                chat.setstatus(message.chat.id, 4)
            # —Å—Ç–∞—Ç—É—Å - –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
            if status == 4:
                #—Å—Ç–∞–≤–∏–º —Å—Ç–∞—Ç—É—Å - –ø–æ–∏—Å–∫ –ø–µ—Å–µ–Ω
                markup = chat.setstatus(message.chat.id, 0)
                #–¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                prof = chat.getprof(message.chat.id)
                if wsql.add_song(prof.newsinger, prof.newsong, message.text):
                    bot.send_message(message.chat.id, text='–ü–µ—Å–Ω—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É', reply_markup=markup)
                else:
                    bot.send_message(message.chat.id, text='–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑—É, –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–∞ –ø–µ—Å–Ω—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', reply_markup=markup)
#–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∏ –Ω–∞–∑–≤–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã, –º—ã –Ω–µ –º–æ–∂–µ–º –≤–≤–æ–¥–∏—Ç—å –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑


    #–µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å - –ø–æ–∏—Å–∫ –ø–µ—Å–µ–Ω
    if status == 0 or status == 1:
        #–ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –ø—Ä–æ–±–µ–ª—ã
        if not mes_is_ok(message.text):
            bot.send_message(message.chat.id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã.")
            return
        #–æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –æ –ø–æ–º–æ—â–∏
        if (message.text == "–ü–æ–º–æ—â—å"):
            #chat.setstatus(message.chat.id, 0)
            bot.send_message(message.chat.id, text="/start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞\n/add –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –ø–µ—Å–Ω–∏")
        #–∑–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞
        elif (message.text == "–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω"):
            if chat.getstatus(message.chat.id) == 1:
#–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±—ã–ª –∫–∞–∫–∏–µ —É –Ω–µ–≥–æ –ø–µ—Å–Ω–∏
                bot.send_message(message.chat.id, text = chat.getcurrentsongs(message.chat.id))
                send_buttons(message)
            else:
                bot.send_message(message.chat.id, text="–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É —Å–ª–æ–≤, –æ–ø–∏—Å—ã–≤–∞—é—â–∏—Ö –≤–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∏ —è –ø–æ–¥–±–µ—Ä—É –ø–ª–µ–π–ª–∏—Å—Ç!")
        #–ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Å–Ω–∏
        elif (message.text == "–î–æ–±–∞–≤–∏—Ç—å –ø–µ—Å–Ω—é"):
            add_song(message)
        #–æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∂–∏–º –æ—Ç–º–µ–Ω—ã
        elif (message.text == "–û—Ç–º–µ–Ω–∞"):
            add_song(message)
        #–æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ —Ü–∏—Ñ—Ä—ã, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–±–æ—Ä–æ–º –ø–µ—Å–Ω–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö
        elif message.text.isdigit(): #–µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ - —Ü–∏—Ñ—Ä–∞
            if chat.getstatus(message.chat.id) == 1:
                show_song_text(chat, message, message.text)
            else:
                bot.send_message(message.chat.id, text="–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
        #–æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç, –ø–æ –Ω–µ–º—É –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω
        else:
            #–Ω–∞—Ö–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –∏ —Å–ª—É–∂–µ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            markup = chat.setstatus(message.chat.id, 1)
            lwords, lsongs = gettext(message.text)
            bot.send_message(message.chat.id, text="–°–ø–∏—Å–∫–∏ –ø–æ—Ö–æ–∂–∏—Ö —Å–ª–æ–≤, –ø–æ –∫–æ—Ç–æ—Ä—ã–º —è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ –Ω–∞—Ö–æ–∂—É –ø–µ—Å–Ω–∏:", reply_markup=markup)

            for txt in lwords:
                if txt != '':
                    bot.send_message(message.chat.id, text=txt, reply_markup=markup)

            #–µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç–æ–π - —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω
            if len(lsongs) != 0:
                bot.send_message(message.chat.id, text=f"–Ø —É–ø–æ—Ä—è–¥–æ—á–∏–ª –ø–µ—Å–Ω–∏ –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∏—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞, –æ—Ü–µ–Ω–∏–≤–∞—é—â–µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–º —Å–ª–æ–≤–∞–º\n{lsongs}", reply_markup=markup)
                print(wsql.songlist)
                chat.setsonglist(message.chat.id, wsql.songlist, wsql.current_songs)
                # —Ä–∏—Å—É–µ–º –∫–Ω–æ–ø–∫–∏
                send_buttons(message)
            else:
                markup = chat.setstatus(message.chat.id, 0)
                bot.send_message(message.chat.id, text="–Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –ø–µ—Å–Ω–∏ –ø–æ –¥–∞–Ω–Ω—ã–º —Å–ª–æ–≤–∞–º ((", reply_markup=markup)

#–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç
print("start")
bot.polling(none_stop=True, interval=0)